// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Student_ClassServer.proto

package pt.ulisboa.tecnico.classes.contract.student;

public final class StudentClassServer {
  private StudentClassServer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ListClassRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pt.ulisboa.tecnico.classes.contract.student.ListClassRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> 
        getVectorClockList();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index);
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    int getVectorClockCount();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
        getVectorClockOrBuilderList();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pt.ulisboa.tecnico.classes.contract.student.ListClassRequest}
   */
  public static final class ListClassRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pt.ulisboa.tecnico.classes.contract.student.ListClassRequest)
      ListClassRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListClassRequest.newBuilder() to construct.
    private ListClassRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListClassRequest() {
      vectorClock_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListClassRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListClassRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                vectorClock_ = new java.util.ArrayList<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage>();
                mutable_bitField0_ |= 0x00000001;
              }
              vectorClock_.add(
                  input.readMessage(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          vectorClock_ = java.util.Collections.unmodifiableList(vectorClock_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest.class, pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest.Builder.class);
    }

    public static final int VECTORCLOCK_FIELD_NUMBER = 1;
    private java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> vectorClock_;
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    @java.lang.Override
    public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> getVectorClockList() {
      return vectorClock_;
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
        getVectorClockOrBuilderList() {
      return vectorClock_;
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    @java.lang.Override
    public int getVectorClockCount() {
      return vectorClock_.size();
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index) {
      return vectorClock_.get(index);
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
        int index) {
      return vectorClock_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < vectorClock_.size(); i++) {
        output.writeMessage(1, vectorClock_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < vectorClock_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, vectorClock_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest)) {
        return super.equals(obj);
      }
      pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest other = (pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest) obj;

      if (!getVectorClockList()
          .equals(other.getVectorClockList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getVectorClockCount() > 0) {
        hash = (37 * hash) + VECTORCLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getVectorClockList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pt.ulisboa.tecnico.classes.contract.student.ListClassRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pt.ulisboa.tecnico.classes.contract.student.ListClassRequest)
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest.class, pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest.Builder.class);
      }

      // Construct using pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVectorClockFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (vectorClockBuilder_ == null) {
          vectorClock_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vectorClockBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_descriptor;
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest getDefaultInstanceForType() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest.getDefaultInstance();
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest build() {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest buildPartial() {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest result = new pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest(this);
        int from_bitField0_ = bitField0_;
        if (vectorClockBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vectorClock_ = java.util.Collections.unmodifiableList(vectorClock_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vectorClock_ = vectorClock_;
        } else {
          result.vectorClock_ = vectorClockBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest) {
          return mergeFrom((pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest other) {
        if (other == pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest.getDefaultInstance()) return this;
        if (vectorClockBuilder_ == null) {
          if (!other.vectorClock_.isEmpty()) {
            if (vectorClock_.isEmpty()) {
              vectorClock_ = other.vectorClock_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVectorClockIsMutable();
              vectorClock_.addAll(other.vectorClock_);
            }
            onChanged();
          }
        } else {
          if (!other.vectorClock_.isEmpty()) {
            if (vectorClockBuilder_.isEmpty()) {
              vectorClockBuilder_.dispose();
              vectorClockBuilder_ = null;
              vectorClock_ = other.vectorClock_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vectorClockBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVectorClockFieldBuilder() : null;
            } else {
              vectorClockBuilder_.addAllMessages(other.vectorClock_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> vectorClock_ =
        java.util.Collections.emptyList();
      private void ensureVectorClockIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vectorClock_ = new java.util.ArrayList<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage>(vectorClock_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> vectorClockBuilder_;

      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> getVectorClockList() {
        if (vectorClockBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vectorClock_);
        } else {
          return vectorClockBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public int getVectorClockCount() {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.size();
        } else {
          return vectorClockBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index) {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.get(index);
        } else {
          return vectorClockBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder setVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.set(index, value);
          onChanged();
        } else {
          vectorClockBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder setVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.set(index, builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder addVectorClock(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.add(value);
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder addVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.add(index, value);
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder addVectorClock(
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.add(builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder addVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.add(index, builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder addAllVectorClock(
          java.lang.Iterable<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> values) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vectorClock_);
          onChanged();
        } else {
          vectorClockBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder clearVectorClock() {
        if (vectorClockBuilder_ == null) {
          vectorClock_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vectorClockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public Builder removeVectorClock(int index) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.remove(index);
          onChanged();
        } else {
          vectorClockBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder getVectorClockBuilder(
          int index) {
        return getVectorClockFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
          int index) {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.get(index);  } else {
          return vectorClockBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
           getVectorClockOrBuilderList() {
        if (vectorClockBuilder_ != null) {
          return vectorClockBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vectorClock_);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder addVectorClockBuilder() {
        return getVectorClockFieldBuilder().addBuilder(
            pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder addVectorClockBuilder(
          int index) {
        return getVectorClockFieldBuilder().addBuilder(
            index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 1;</code>
       */
      public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder> 
           getVectorClockBuilderList() {
        return getVectorClockFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
          getVectorClockFieldBuilder() {
        if (vectorClockBuilder_ == null) {
          vectorClockBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder>(
                  vectorClock_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vectorClock_ = null;
        }
        return vectorClockBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pt.ulisboa.tecnico.classes.contract.student.ListClassRequest)
    }

    // @@protoc_insertion_point(class_scope:pt.ulisboa.tecnico.classes.contract.student.ListClassRequest)
    private static final pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest();
    }

    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListClassRequest>
        PARSER = new com.google.protobuf.AbstractParser<ListClassRequest>() {
      @java.lang.Override
      public ListClassRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListClassRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListClassRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListClassRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ListClassResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pt.ulisboa.tecnico.classes.contract.student.ListClassResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    int getCodeValue();
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
     * @return The code.
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode getCode();

    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
     * @return Whether the classState field is set.
     */
    boolean hasClassState();
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
     * @return The classState.
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState getClassState();
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassStateOrBuilder getClassStateOrBuilder();

    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> 
        getVectorClockList();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index);
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    int getVectorClockCount();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
        getVectorClockOrBuilderList();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pt.ulisboa.tecnico.classes.contract.student.ListClassResponse}
   */
  public static final class ListClassResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pt.ulisboa.tecnico.classes.contract.student.ListClassResponse)
      ListClassResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ListClassResponse.newBuilder() to construct.
    private ListClassResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ListClassResponse() {
      code_ = 0;
      vectorClock_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ListClassResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ListClassResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.Builder subBuilder = null;
              if (classState_ != null) {
                subBuilder = classState_.toBuilder();
              }
              classState_ = input.readMessage(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(classState_);
                classState_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                vectorClock_ = new java.util.ArrayList<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage>();
                mutable_bitField0_ |= 0x00000001;
              }
              vectorClock_.add(
                  input.readMessage(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          vectorClock_ = java.util.Collections.unmodifiableList(vectorClock_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse.class, pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    @java.lang.Override public int getCodeValue() {
      return code_;
    }
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
     * @return The code.
     */
    @java.lang.Override public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode getCode() {
      @SuppressWarnings("deprecation")
      pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode result = pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.valueOf(code_);
      return result == null ? pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.UNRECOGNIZED : result;
    }

    public static final int CLASSSTATE_FIELD_NUMBER = 2;
    private pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState classState_;
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
     * @return Whether the classState field is set.
     */
    @java.lang.Override
    public boolean hasClassState() {
      return classState_ != null;
    }
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
     * @return The classState.
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState getClassState() {
      return classState_ == null ? pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.getDefaultInstance() : classState_;
    }
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassStateOrBuilder getClassStateOrBuilder() {
      return getClassState();
    }

    public static final int VECTORCLOCK_FIELD_NUMBER = 3;
    private java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> vectorClock_;
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    @java.lang.Override
    public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> getVectorClockList() {
      return vectorClock_;
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
        getVectorClockOrBuilderList() {
      return vectorClock_;
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    @java.lang.Override
    public int getVectorClockCount() {
      return vectorClock_.size();
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index) {
      return vectorClock_.get(index);
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
        int index) {
      return vectorClock_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      if (classState_ != null) {
        output.writeMessage(2, getClassState());
      }
      for (int i = 0; i < vectorClock_.size(); i++) {
        output.writeMessage(3, vectorClock_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      if (classState_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getClassState());
      }
      for (int i = 0; i < vectorClock_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, vectorClock_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse)) {
        return super.equals(obj);
      }
      pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse other = (pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse) obj;

      if (code_ != other.code_) return false;
      if (hasClassState() != other.hasClassState()) return false;
      if (hasClassState()) {
        if (!getClassState()
            .equals(other.getClassState())) return false;
      }
      if (!getVectorClockList()
          .equals(other.getVectorClockList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + code_;
      if (hasClassState()) {
        hash = (37 * hash) + CLASSSTATE_FIELD_NUMBER;
        hash = (53 * hash) + getClassState().hashCode();
      }
      if (getVectorClockCount() > 0) {
        hash = (37 * hash) + VECTORCLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getVectorClockList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pt.ulisboa.tecnico.classes.contract.student.ListClassResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pt.ulisboa.tecnico.classes.contract.student.ListClassResponse)
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse.class, pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse.Builder.class);
      }

      // Construct using pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVectorClockFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        code_ = 0;

        if (classStateBuilder_ == null) {
          classState_ = null;
        } else {
          classState_ = null;
          classStateBuilder_ = null;
        }
        if (vectorClockBuilder_ == null) {
          vectorClock_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vectorClockBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_descriptor;
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse getDefaultInstanceForType() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse.getDefaultInstance();
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse build() {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse buildPartial() {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse result = new pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse(this);
        int from_bitField0_ = bitField0_;
        result.code_ = code_;
        if (classStateBuilder_ == null) {
          result.classState_ = classState_;
        } else {
          result.classState_ = classStateBuilder_.build();
        }
        if (vectorClockBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vectorClock_ = java.util.Collections.unmodifiableList(vectorClock_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vectorClock_ = vectorClock_;
        } else {
          result.vectorClock_ = vectorClockBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse) {
          return mergeFrom((pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse other) {
        if (other == pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (other.hasClassState()) {
          mergeClassState(other.getClassState());
        }
        if (vectorClockBuilder_ == null) {
          if (!other.vectorClock_.isEmpty()) {
            if (vectorClock_.isEmpty()) {
              vectorClock_ = other.vectorClock_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVectorClockIsMutable();
              vectorClock_.addAll(other.vectorClock_);
            }
            onChanged();
          }
        } else {
          if (!other.vectorClock_.isEmpty()) {
            if (vectorClockBuilder_.isEmpty()) {
              vectorClockBuilder_.dispose();
              vectorClockBuilder_ = null;
              vectorClock_ = other.vectorClock_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vectorClockBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVectorClockFieldBuilder() : null;
            } else {
              vectorClockBuilder_.addAllMessages(other.vectorClock_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int code_ = 0;
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @return The enum numeric value on the wire for code.
       */
      @java.lang.Override public int getCodeValue() {
        return code_;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @param value The enum numeric value on the wire for code to set.
       * @return This builder for chaining.
       */
      public Builder setCodeValue(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @return The code.
       */
      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode getCode() {
        @SuppressWarnings("deprecation")
        pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode result = pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.valueOf(code_);
        return result == null ? pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.UNRECOGNIZED : result;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState classState_;
      private com.google.protobuf.SingleFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassStateOrBuilder> classStateBuilder_;
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       * @return Whether the classState field is set.
       */
      public boolean hasClassState() {
        return classStateBuilder_ != null || classState_ != null;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       * @return The classState.
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState getClassState() {
        if (classStateBuilder_ == null) {
          return classState_ == null ? pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.getDefaultInstance() : classState_;
        } else {
          return classStateBuilder_.getMessage();
        }
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       */
      public Builder setClassState(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState value) {
        if (classStateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          classState_ = value;
          onChanged();
        } else {
          classStateBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       */
      public Builder setClassState(
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.Builder builderForValue) {
        if (classStateBuilder_ == null) {
          classState_ = builderForValue.build();
          onChanged();
        } else {
          classStateBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       */
      public Builder mergeClassState(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState value) {
        if (classStateBuilder_ == null) {
          if (classState_ != null) {
            classState_ =
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.newBuilder(classState_).mergeFrom(value).buildPartial();
          } else {
            classState_ = value;
          }
          onChanged();
        } else {
          classStateBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       */
      public Builder clearClassState() {
        if (classStateBuilder_ == null) {
          classState_ = null;
          onChanged();
        } else {
          classState_ = null;
          classStateBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.Builder getClassStateBuilder() {
        
        onChanged();
        return getClassStateFieldBuilder().getBuilder();
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassStateOrBuilder getClassStateOrBuilder() {
        if (classStateBuilder_ != null) {
          return classStateBuilder_.getMessageOrBuilder();
        } else {
          return classState_ == null ?
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.getDefaultInstance() : classState_;
        }
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ClassState classState = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassStateOrBuilder> 
          getClassStateFieldBuilder() {
        if (classStateBuilder_ == null) {
          classStateBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassState.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ClassStateOrBuilder>(
                  getClassState(),
                  getParentForChildren(),
                  isClean());
          classState_ = null;
        }
        return classStateBuilder_;
      }

      private java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> vectorClock_ =
        java.util.Collections.emptyList();
      private void ensureVectorClockIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vectorClock_ = new java.util.ArrayList<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage>(vectorClock_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> vectorClockBuilder_;

      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> getVectorClockList() {
        if (vectorClockBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vectorClock_);
        } else {
          return vectorClockBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public int getVectorClockCount() {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.size();
        } else {
          return vectorClockBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index) {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.get(index);
        } else {
          return vectorClockBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder setVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.set(index, value);
          onChanged();
        } else {
          vectorClockBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder setVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.set(index, builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder addVectorClock(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.add(value);
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder addVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.add(index, value);
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder addVectorClock(
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.add(builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder addVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.add(index, builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder addAllVectorClock(
          java.lang.Iterable<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> values) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vectorClock_);
          onChanged();
        } else {
          vectorClockBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder clearVectorClock() {
        if (vectorClockBuilder_ == null) {
          vectorClock_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vectorClockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public Builder removeVectorClock(int index) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.remove(index);
          onChanged();
        } else {
          vectorClockBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder getVectorClockBuilder(
          int index) {
        return getVectorClockFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
          int index) {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.get(index);  } else {
          return vectorClockBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
           getVectorClockOrBuilderList() {
        if (vectorClockBuilder_ != null) {
          return vectorClockBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vectorClock_);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder addVectorClockBuilder() {
        return getVectorClockFieldBuilder().addBuilder(
            pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder addVectorClockBuilder(
          int index) {
        return getVectorClockFieldBuilder().addBuilder(
            index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 3;</code>
       */
      public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder> 
           getVectorClockBuilderList() {
        return getVectorClockFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
          getVectorClockFieldBuilder() {
        if (vectorClockBuilder_ == null) {
          vectorClockBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder>(
                  vectorClock_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vectorClock_ = null;
        }
        return vectorClockBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pt.ulisboa.tecnico.classes.contract.student.ListClassResponse)
    }

    // @@protoc_insertion_point(class_scope:pt.ulisboa.tecnico.classes.contract.student.ListClassResponse)
    private static final pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse();
    }

    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ListClassResponse>
        PARSER = new com.google.protobuf.AbstractParser<ListClassResponse>() {
      @java.lang.Override
      public ListClassResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ListClassResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ListClassResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ListClassResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.ListClassResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EnrollRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pt.ulisboa.tecnico.classes.contract.student.EnrollRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
     * @return Whether the student field is set.
     */
    boolean hasStudent();
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
     * @return The student.
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student getStudent();
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.StudentOrBuilder getStudentOrBuilder();

    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> 
        getVectorClockList();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index);
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    int getVectorClockCount();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
        getVectorClockOrBuilderList();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pt.ulisboa.tecnico.classes.contract.student.EnrollRequest}
   */
  public static final class EnrollRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pt.ulisboa.tecnico.classes.contract.student.EnrollRequest)
      EnrollRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EnrollRequest.newBuilder() to construct.
    private EnrollRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EnrollRequest() {
      vectorClock_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EnrollRequest();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EnrollRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.Builder subBuilder = null;
              if (student_ != null) {
                subBuilder = student_.toBuilder();
              }
              student_ = input.readMessage(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(student_);
                student_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                vectorClock_ = new java.util.ArrayList<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage>();
                mutable_bitField0_ |= 0x00000001;
              }
              vectorClock_.add(
                  input.readMessage(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          vectorClock_ = java.util.Collections.unmodifiableList(vectorClock_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest.class, pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest.Builder.class);
    }

    public static final int STUDENT_FIELD_NUMBER = 1;
    private pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student student_;
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
     * @return Whether the student field is set.
     */
    @java.lang.Override
    public boolean hasStudent() {
      return student_ != null;
    }
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
     * @return The student.
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student getStudent() {
      return student_ == null ? pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.getDefaultInstance() : student_;
    }
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.StudentOrBuilder getStudentOrBuilder() {
      return getStudent();
    }

    public static final int VECTORCLOCK_FIELD_NUMBER = 2;
    private java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> vectorClock_;
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> getVectorClockList() {
      return vectorClock_;
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
        getVectorClockOrBuilderList() {
      return vectorClock_;
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public int getVectorClockCount() {
      return vectorClock_.size();
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index) {
      return vectorClock_.get(index);
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
        int index) {
      return vectorClock_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (student_ != null) {
        output.writeMessage(1, getStudent());
      }
      for (int i = 0; i < vectorClock_.size(); i++) {
        output.writeMessage(2, vectorClock_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (student_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getStudent());
      }
      for (int i = 0; i < vectorClock_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, vectorClock_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest)) {
        return super.equals(obj);
      }
      pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest other = (pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest) obj;

      if (hasStudent() != other.hasStudent()) return false;
      if (hasStudent()) {
        if (!getStudent()
            .equals(other.getStudent())) return false;
      }
      if (!getVectorClockList()
          .equals(other.getVectorClockList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasStudent()) {
        hash = (37 * hash) + STUDENT_FIELD_NUMBER;
        hash = (53 * hash) + getStudent().hashCode();
      }
      if (getVectorClockCount() > 0) {
        hash = (37 * hash) + VECTORCLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getVectorClockList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pt.ulisboa.tecnico.classes.contract.student.EnrollRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pt.ulisboa.tecnico.classes.contract.student.EnrollRequest)
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest.class, pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest.Builder.class);
      }

      // Construct using pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVectorClockFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (studentBuilder_ == null) {
          student_ = null;
        } else {
          student_ = null;
          studentBuilder_ = null;
        }
        if (vectorClockBuilder_ == null) {
          vectorClock_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vectorClockBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_descriptor;
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest getDefaultInstanceForType() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest.getDefaultInstance();
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest build() {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest buildPartial() {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest result = new pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest(this);
        int from_bitField0_ = bitField0_;
        if (studentBuilder_ == null) {
          result.student_ = student_;
        } else {
          result.student_ = studentBuilder_.build();
        }
        if (vectorClockBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vectorClock_ = java.util.Collections.unmodifiableList(vectorClock_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vectorClock_ = vectorClock_;
        } else {
          result.vectorClock_ = vectorClockBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest) {
          return mergeFrom((pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest other) {
        if (other == pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest.getDefaultInstance()) return this;
        if (other.hasStudent()) {
          mergeStudent(other.getStudent());
        }
        if (vectorClockBuilder_ == null) {
          if (!other.vectorClock_.isEmpty()) {
            if (vectorClock_.isEmpty()) {
              vectorClock_ = other.vectorClock_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVectorClockIsMutable();
              vectorClock_.addAll(other.vectorClock_);
            }
            onChanged();
          }
        } else {
          if (!other.vectorClock_.isEmpty()) {
            if (vectorClockBuilder_.isEmpty()) {
              vectorClockBuilder_.dispose();
              vectorClockBuilder_ = null;
              vectorClock_ = other.vectorClock_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vectorClockBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVectorClockFieldBuilder() : null;
            } else {
              vectorClockBuilder_.addAllMessages(other.vectorClock_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student student_;
      private com.google.protobuf.SingleFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.StudentOrBuilder> studentBuilder_;
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       * @return Whether the student field is set.
       */
      public boolean hasStudent() {
        return studentBuilder_ != null || student_ != null;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       * @return The student.
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student getStudent() {
        if (studentBuilder_ == null) {
          return student_ == null ? pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.getDefaultInstance() : student_;
        } else {
          return studentBuilder_.getMessage();
        }
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       */
      public Builder setStudent(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student value) {
        if (studentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          student_ = value;
          onChanged();
        } else {
          studentBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       */
      public Builder setStudent(
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.Builder builderForValue) {
        if (studentBuilder_ == null) {
          student_ = builderForValue.build();
          onChanged();
        } else {
          studentBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       */
      public Builder mergeStudent(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student value) {
        if (studentBuilder_ == null) {
          if (student_ != null) {
            student_ =
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.newBuilder(student_).mergeFrom(value).buildPartial();
          } else {
            student_ = value;
          }
          onChanged();
        } else {
          studentBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       */
      public Builder clearStudent() {
        if (studentBuilder_ == null) {
          student_ = null;
          onChanged();
        } else {
          student_ = null;
          studentBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.Builder getStudentBuilder() {
        
        onChanged();
        return getStudentFieldBuilder().getBuilder();
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.StudentOrBuilder getStudentOrBuilder() {
        if (studentBuilder_ != null) {
          return studentBuilder_.getMessageOrBuilder();
        } else {
          return student_ == null ?
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.getDefaultInstance() : student_;
        }
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.Student student = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.StudentOrBuilder> 
          getStudentFieldBuilder() {
        if (studentBuilder_ == null) {
          studentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.Student.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.StudentOrBuilder>(
                  getStudent(),
                  getParentForChildren(),
                  isClean());
          student_ = null;
        }
        return studentBuilder_;
      }

      private java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> vectorClock_ =
        java.util.Collections.emptyList();
      private void ensureVectorClockIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vectorClock_ = new java.util.ArrayList<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage>(vectorClock_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> vectorClockBuilder_;

      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> getVectorClockList() {
        if (vectorClockBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vectorClock_);
        } else {
          return vectorClockBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public int getVectorClockCount() {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.size();
        } else {
          return vectorClockBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index) {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.get(index);
        } else {
          return vectorClockBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder setVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.set(index, value);
          onChanged();
        } else {
          vectorClockBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder setVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.set(index, builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addVectorClock(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.add(value);
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.add(index, value);
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addVectorClock(
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.add(builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.add(index, builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addAllVectorClock(
          java.lang.Iterable<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> values) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vectorClock_);
          onChanged();
        } else {
          vectorClockBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder clearVectorClock() {
        if (vectorClockBuilder_ == null) {
          vectorClock_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vectorClockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder removeVectorClock(int index) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.remove(index);
          onChanged();
        } else {
          vectorClockBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder getVectorClockBuilder(
          int index) {
        return getVectorClockFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
          int index) {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.get(index);  } else {
          return vectorClockBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
           getVectorClockOrBuilderList() {
        if (vectorClockBuilder_ != null) {
          return vectorClockBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vectorClock_);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder addVectorClockBuilder() {
        return getVectorClockFieldBuilder().addBuilder(
            pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder addVectorClockBuilder(
          int index) {
        return getVectorClockFieldBuilder().addBuilder(
            index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder> 
           getVectorClockBuilderList() {
        return getVectorClockFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
          getVectorClockFieldBuilder() {
        if (vectorClockBuilder_ == null) {
          vectorClockBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder>(
                  vectorClock_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vectorClock_ = null;
        }
        return vectorClockBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pt.ulisboa.tecnico.classes.contract.student.EnrollRequest)
    }

    // @@protoc_insertion_point(class_scope:pt.ulisboa.tecnico.classes.contract.student.EnrollRequest)
    private static final pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest();
    }

    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EnrollRequest>
        PARSER = new com.google.protobuf.AbstractParser<EnrollRequest>() {
      @java.lang.Override
      public EnrollRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnrollRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EnrollRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EnrollRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EnrollResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:pt.ulisboa.tecnico.classes.contract.student.EnrollResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    int getCodeValue();
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
     * @return The code.
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode getCode();

    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> 
        getVectorClockList();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index);
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    int getVectorClockCount();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
        getVectorClockOrBuilderList();
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code pt.ulisboa.tecnico.classes.contract.student.EnrollResponse}
   */
  public static final class EnrollResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:pt.ulisboa.tecnico.classes.contract.student.EnrollResponse)
      EnrollResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use EnrollResponse.newBuilder() to construct.
    private EnrollResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EnrollResponse() {
      code_ = 0;
      vectorClock_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new EnrollResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private EnrollResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              code_ = rawValue;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                vectorClock_ = new java.util.ArrayList<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage>();
                mutable_bitField0_ |= 0x00000001;
              }
              vectorClock_.add(
                  input.readMessage(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          vectorClock_ = java.util.Collections.unmodifiableList(vectorClock_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse.class, pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse.Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private int code_;
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
     * @return The enum numeric value on the wire for code.
     */
    @java.lang.Override public int getCodeValue() {
      return code_;
    }
    /**
     * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
     * @return The code.
     */
    @java.lang.Override public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode getCode() {
      @SuppressWarnings("deprecation")
      pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode result = pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.valueOf(code_);
      return result == null ? pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.UNRECOGNIZED : result;
    }

    public static final int VECTORCLOCK_FIELD_NUMBER = 2;
    private java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> vectorClock_;
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> getVectorClockList() {
      return vectorClock_;
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
        getVectorClockOrBuilderList() {
      return vectorClock_;
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public int getVectorClockCount() {
      return vectorClock_.size();
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index) {
      return vectorClock_.get(index);
    }
    /**
     * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
     */
    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
        int index) {
      return vectorClock_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (code_ != pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.OK.getNumber()) {
        output.writeEnum(1, code_);
      }
      for (int i = 0; i < vectorClock_.size(); i++) {
        output.writeMessage(2, vectorClock_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (code_ != pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, code_);
      }
      for (int i = 0; i < vectorClock_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, vectorClock_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse)) {
        return super.equals(obj);
      }
      pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse other = (pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse) obj;

      if (code_ != other.code_) return false;
      if (!getVectorClockList()
          .equals(other.getVectorClockList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + code_;
      if (getVectorClockCount() > 0) {
        hash = (37 * hash) + VECTORCLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getVectorClockList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pt.ulisboa.tecnico.classes.contract.student.EnrollResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:pt.ulisboa.tecnico.classes.contract.student.EnrollResponse)
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse.class, pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse.Builder.class);
      }

      // Construct using pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getVectorClockFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        code_ = 0;

        if (vectorClockBuilder_ == null) {
          vectorClock_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          vectorClockBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_descriptor;
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse getDefaultInstanceForType() {
        return pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse.getDefaultInstance();
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse build() {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse buildPartial() {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse result = new pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse(this);
        int from_bitField0_ = bitField0_;
        result.code_ = code_;
        if (vectorClockBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            vectorClock_ = java.util.Collections.unmodifiableList(vectorClock_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.vectorClock_ = vectorClock_;
        } else {
          result.vectorClock_ = vectorClockBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse) {
          return mergeFrom((pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse other) {
        if (other == pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse.getDefaultInstance()) return this;
        if (other.code_ != 0) {
          setCodeValue(other.getCodeValue());
        }
        if (vectorClockBuilder_ == null) {
          if (!other.vectorClock_.isEmpty()) {
            if (vectorClock_.isEmpty()) {
              vectorClock_ = other.vectorClock_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureVectorClockIsMutable();
              vectorClock_.addAll(other.vectorClock_);
            }
            onChanged();
          }
        } else {
          if (!other.vectorClock_.isEmpty()) {
            if (vectorClockBuilder_.isEmpty()) {
              vectorClockBuilder_.dispose();
              vectorClockBuilder_ = null;
              vectorClock_ = other.vectorClock_;
              bitField0_ = (bitField0_ & ~0x00000001);
              vectorClockBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getVectorClockFieldBuilder() : null;
            } else {
              vectorClockBuilder_.addAllMessages(other.vectorClock_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int code_ = 0;
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @return The enum numeric value on the wire for code.
       */
      @java.lang.Override public int getCodeValue() {
        return code_;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @param value The enum numeric value on the wire for code to set.
       * @return This builder for chaining.
       */
      public Builder setCodeValue(int value) {
        
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @return The code.
       */
      @java.lang.Override
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode getCode() {
        @SuppressWarnings("deprecation")
        pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode result = pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.valueOf(code_);
        return result == null ? pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode.UNRECOGNIZED : result;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @param value The code to set.
       * @return This builder for chaining.
       */
      public Builder setCode(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.ResponseCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        code_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.pt.ulisboa.tecnico.classes.contract.ResponseCode code = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCode() {
        
        code_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> vectorClock_ =
        java.util.Collections.emptyList();
      private void ensureVectorClockIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          vectorClock_ = new java.util.ArrayList<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage>(vectorClock_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> vectorClockBuilder_;

      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> getVectorClockList() {
        if (vectorClockBuilder_ == null) {
          return java.util.Collections.unmodifiableList(vectorClock_);
        } else {
          return vectorClockBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public int getVectorClockCount() {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.size();
        } else {
          return vectorClockBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage getVectorClock(int index) {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.get(index);
        } else {
          return vectorClockBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder setVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.set(index, value);
          onChanged();
        } else {
          vectorClockBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder setVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.set(index, builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addVectorClock(pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.add(value);
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage value) {
        if (vectorClockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVectorClockIsMutable();
          vectorClock_.add(index, value);
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addVectorClock(
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.add(builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addVectorClock(
          int index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder builderForValue) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.add(index, builderForValue.build());
          onChanged();
        } else {
          vectorClockBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder addAllVectorClock(
          java.lang.Iterable<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage> values) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, vectorClock_);
          onChanged();
        } else {
          vectorClockBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder clearVectorClock() {
        if (vectorClockBuilder_ == null) {
          vectorClock_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          vectorClockBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public Builder removeVectorClock(int index) {
        if (vectorClockBuilder_ == null) {
          ensureVectorClockIsMutable();
          vectorClock_.remove(index);
          onChanged();
        } else {
          vectorClockBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder getVectorClockBuilder(
          int index) {
        return getVectorClockFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder getVectorClockOrBuilder(
          int index) {
        if (vectorClockBuilder_ == null) {
          return vectorClock_.get(index);  } else {
          return vectorClockBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public java.util.List<? extends pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
           getVectorClockOrBuilderList() {
        if (vectorClockBuilder_ != null) {
          return vectorClockBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(vectorClock_);
        }
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder addVectorClockBuilder() {
        return getVectorClockFieldBuilder().addBuilder(
            pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder addVectorClockBuilder(
          int index) {
        return getVectorClockFieldBuilder().addBuilder(
            index, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.getDefaultInstance());
      }
      /**
       * <code>repeated .pt.ulisboa.tecnico.classes.contract.VectorClockMessage vectorClock = 2;</code>
       */
      public java.util.List<pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder> 
           getVectorClockBuilderList() {
        return getVectorClockFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder> 
          getVectorClockFieldBuilder() {
        if (vectorClockBuilder_ == null) {
          vectorClockBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessage.Builder, pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.VectorClockMessageOrBuilder>(
                  vectorClock_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          vectorClock_ = null;
        }
        return vectorClockBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:pt.ulisboa.tecnico.classes.contract.student.EnrollResponse)
    }

    // @@protoc_insertion_point(class_scope:pt.ulisboa.tecnico.classes.contract.student.EnrollResponse)
    private static final pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse();
    }

    public static pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EnrollResponse>
        PARSER = new com.google.protobuf.AbstractParser<EnrollResponse>() {
      @java.lang.Override
      public EnrollResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new EnrollResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EnrollResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EnrollResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public pt.ulisboa.tecnico.classes.contract.student.StudentClassServer.EnrollResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031Student_ClassServer.proto\022+pt.ulisboa." +
      "tecnico.classes.contract.student\032\030Classe" +
      "sDefinitions.proto\"`\n\020ListClassRequest\022L" +
      "\n\013vectorClock\030\001 \003(\01327.pt.ulisboa.tecnico" +
      ".classes.contract.VectorClockMessage\"\347\001\n" +
      "\021ListClassResponse\022?\n\004code\030\001 \001(\01621.pt.ul" +
      "isboa.tecnico.classes.contract.ResponseC" +
      "ode\022C\n\nclassState\030\002 \001(\0132/.pt.ulisboa.tec" +
      "nico.classes.contract.ClassState\022L\n\013vect" +
      "orClock\030\003 \003(\01327.pt.ulisboa.tecnico.class" +
      "es.contract.VectorClockMessage\"\234\001\n\rEnrol" +
      "lRequest\022=\n\007student\030\001 \001(\0132,.pt.ulisboa.t" +
      "ecnico.classes.contract.Student\022L\n\013vecto" +
      "rClock\030\002 \003(\01327.pt.ulisboa.tecnico.classe" +
      "s.contract.VectorClockMessage\"\237\001\n\016Enroll" +
      "Response\022?\n\004code\030\001 \001(\01621.pt.ulisboa.tecn" +
      "ico.classes.contract.ResponseCode\022L\n\013vec" +
      "torClock\030\002 \003(\01327.pt.ulisboa.tecnico.clas" +
      "ses.contract.VectorClockMessage2\241\002\n\016Stud" +
      "entService\022\212\001\n\tlistClass\022=.pt.ulisboa.te" +
      "cnico.classes.contract.student.ListClass" +
      "Request\032>.pt.ulisboa.tecnico.classes.con" +
      "tract.student.ListClassResponse\022\201\001\n\006enro" +
      "ll\022:.pt.ulisboa.tecnico.classes.contract" +
      ".student.EnrollRequest\032;.pt.ulisboa.tecn" +
      "ico.classes.contract.student.EnrollRespo" +
      "nseb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.getDescriptor(),
        });
    internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassRequest_descriptor,
        new java.lang.String[] { "VectorClock", });
    internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pt_ulisboa_tecnico_classes_contract_student_ListClassResponse_descriptor,
        new java.lang.String[] { "Code", "ClassState", "VectorClock", });
    internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollRequest_descriptor,
        new java.lang.String[] { "Student", "VectorClock", });
    internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_pt_ulisboa_tecnico_classes_contract_student_EnrollResponse_descriptor,
        new java.lang.String[] { "Code", "VectorClock", });
    pt.ulisboa.tecnico.classes.contract.ClassesDefinitions.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
